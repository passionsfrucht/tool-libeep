# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package generation, the manual way, without cibuildwheel. Just testing a small subset now, cibuildwheel takes care of other platforms.

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  pull_request_target:
    types:
    - closed

jobs:
  build_wheels_without_cibuildwheel:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]
        os:
        - ubuntu-22.04
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install pypa/build
      run: >-
        python3 -m
        pip install
        build
        --user
    - name: Build a binary wheel and a source tarball
      run: python3 -m build
    - uses: actions/upload-artifact@v4
      with:
        name: wheel-${{ matrix.python-version }}-${{ matrix.os }}
        path: dist/*.whl
  test_wheel:
    needs: build_wheels_without_cibuildwheel
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]
        os:
        - ubuntu-22.04
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: wheel-${{ matrix.python-version }}-${{ matrix.os }}
    - name: List current working directory
      run: ls -R
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Glob match
      uses: tj-actions/glob@v22
      id: glob
      with:
        files: "*.whl"
    - name: Install the wheel
      run: python3 -m pip install --user ${{ steps.glob.outputs.paths }}[test]
    - uses: actions/checkout@v4
    - name: Run tests
      run: python3 -m pytest
